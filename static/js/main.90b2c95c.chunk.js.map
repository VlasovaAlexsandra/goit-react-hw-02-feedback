{"version":3,"sources":["components/Feedback/Section.js","components/Feedback/FeedbackOptions.js","components/Feedback/Statistics.js","components/Feedback/Notification.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","type","onClick","Statistics","good","neutral","bad","total","positiveFeedback","Notification","message","Feedback","state","handleClick","evt","name","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","keyName","Object","keys","this","React","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAeeA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,oCACI,6BAAKD,IACJC,MCUMC,EAbS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACpB,gCACI,wBAAQC,UAAU,MAAMC,KAAK,SAASC,QAAS,kBAAMH,EAAgB,GAAD,OAAID,EAAQ,MAAhF,oBACA,wBAAQE,UAAU,MAAMC,KAAK,SAASC,QAAS,kBAAMH,EAAgB,GAAD,OAAID,EAAQ,MAAhF,uBACA,wBAAQE,UAAU,MAAMC,KAAK,SAASC,QAAS,kBAAMH,EAAgB,GAAD,OAAID,EAAQ,MAAhF,uBCwBOK,EA5BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,iBAA9B,OACf,+BACI,qBAAIR,UAAU,OAAd,mBACWI,KAEX,qBAAIJ,UAAU,OAAd,sBACcK,KAEd,qBAAIL,UAAU,OAAd,kBACUM,KAEV,qBAAIN,UAAU,OAAd,oBACYO,KAEZ,qBAAIP,UAAU,OAAd,gCACwBQ,EADxB,WCNOC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,4BAAIA,KCIFC,G,kNAOFC,MAAQ,CACJR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTO,YAAc,SAAAC,GACV,IAAMC,EAAOD,EACb,EAAKE,UAAS,SAAAC,GACV,OAAO,eACFF,EAAOE,EAAUF,GAAQ,O,EAKtCG,mBAAqB,WAAO,IAAD,EACQ,EAAKN,MACpC,OAFuB,EACfR,KADe,EACTC,QADS,EACAC,K,EAI3Ba,gCAAkC,WAAO,IAC7Bf,EAAS,EAAKQ,MAAdR,KACFgB,EAAgB,EAAKF,qBAC3B,OAAOG,KAAKC,MAAc,IAAPlB,EAAcgB,IAAkB,G,4CAGvD,WAEI,IAAMG,EAAUC,OAAOC,KAAKC,KAAKd,OAEjC,OACI,sBAAKZ,UAAU,YAAf,UACI,cAAC,EAAD,CAASL,MAAM,wBAAf,SACI,cAAC,EAAD,CACIG,QAASyB,EACTxB,gBAAiB2B,KAAKb,gBAI9B,cAAC,EAAD,CAASlB,MAAM,aAAf,SACmC,IAA9B+B,KAAKR,qBACF,cAAC,EAAD,CAAcR,QAAQ,sBACrB,cAAC,EAAD,CACDN,KAAMsB,KAAKd,MAAMR,KACjBC,QAASqB,KAAKd,MAAMP,QACpBC,IAAKoB,KAAKd,MAAMN,IAChBC,MAAOmB,KAAKR,qBACZV,iBAAkBkB,KAAKP,6C,GAtDxBQ,IAAMC,YAAvBjB,EACKkB,aAAe,CAClBzB,KAAM,EACNC,QAAS,EACTC,IAAK,GAgEEK,QCjEAmB,EANH,kBACR,mCACI,cAAC,EAAD,O,MCFRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90b2c95c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n    <div>\r\n        <button className=\"btn\" type=\"button\" onClick={() => onLeaveFeedback(`${options[0]}`)}> Good </button>\r\n        <button className=\"btn\" type=\"button\" onClick={() => onLeaveFeedback(`${options[1]}`)}> Neutral </button>\r\n        <button className=\"btn\" type=\"button\" onClick={() => onLeaveFeedback(`${options[2]}`)}> Bad </button>\r\n    </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string),\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => (\r\n    <ul>\r\n        <li className=\"stat\">\r\n            Good: {good}\r\n        </li>\r\n        <li className=\"stat\">\r\n            Neutral: {neutral}\r\n        </li>\r\n        <li className=\"stat\">\r\n            Bad: {bad}\r\n        </li>\r\n        <li className=\"stat\">\r\n            Total: {total}\r\n        </li>\r\n        <li className=\"stat\">\r\n            Positive Feedback: {positiveFeedback}%\r\n        </li>\r\n    </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positiveFeedback: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport Section from './Section';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Statistics from './Statistics';\r\nimport Notification from './Notification';\r\n// import PropTypes from 'prop-types';\r\nimport './Feedback.css';\r\n\r\nclass Feedback extends React.Component {\r\n    static defaultProps = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    };\r\n\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    };\r\n\r\n    handleClick = evt => {\r\n        const name = evt;\r\n        this.setState(prevState => {\r\n            return {\r\n                [name]: prevState[name] + 1,\r\n            };\r\n        });\r\n    };\r\n\r\n    countTotalFeedback = () => {\r\n        const { good, neutral, bad } = this.state;\r\n        return good + neutral + bad;\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const { good } = this.state;\r\n        const totalFeedback = this.countTotalFeedback();\r\n        return Math.round((good * 100) / totalFeedback) || 0;\r\n    }\r\n\r\n    render() {\r\n\r\n        const keyName = Object.keys(this.state);\r\n\r\n        return (\r\n            <div className=\"conteiner\">\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions\r\n                        options={keyName}\r\n                        onLeaveFeedback={this.handleClick}\r\n                    />\r\n                </Section>\r\n\r\n                <Section title=\"Statistics\">\r\n                    {this.countTotalFeedback() === 0 ? (\r\n                        <Notification message=\"No feedback given\" />\r\n                    ) : (<Statistics\r\n                        good={this.state.good}\r\n                        neutral={this.state.neutral}\r\n                        bad={this.state.bad}\r\n                        total={this.countTotalFeedback()}\r\n                        positiveFeedback={this.countPositiveFeedbackPercentage()}\r\n\r\n                    />\r\n                    )\r\n\r\n                    }\r\n\r\n                </Section>\r\n\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Feedback;","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Feedback from './components/Feedback/Feedback';\r\n\r\n\r\nconst App = () => (\r\n    <>\r\n        <Feedback />\r\n    </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}